% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_select_carscore.R
\name{step_select_carscore}
\alias{step_select_carscore}
\alias{tidy.step_select_carscore}
\title{Feature selection step using the CAR score algorithm}
\usage{
step_select_carscore(
  recipe,
  ...,
  outcome = NULL,
  role = NA,
  trained = FALSE,
  top_p = NA,
  threshold = NA,
  cutoff = NA,
  lambda = NA,
  diagonal = FALSE,
  exclude = NULL,
  scores = NULL,
  skip = FALSE,
  id = recipes::rand_id("select_carscore")
)

\method{tidy}{step_select_carscore}(x, type = "terms", ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the sequence of
operations for this recipe.}

\item{...}{One or more selector functions to choose which predictors are
affected by the step. See [selections()] for more details. For the `tidy`
method, these are not currently used.}

\item{outcome}{A character string with the name of the response variable.
This must refer to a numeric feature for regression.}

\item{role}{Not used by this step since no new variables are created.}

\item{trained}{A logical to indicate if the quantities for preprocessing have
been estimated.}

\item{top_p}{An integer that will be used to select the `top_p` predictors
with the smallest p-values. A value of `NA` implies that this criterion
will be ignored.}

\item{threshold}{A numeric value between 0 and 1 representing the percentile
of best scoring features to select. For example `threshold = 0.9` will
retain only predictors with scores in the top 90th percentile and a smaller
threshold will select more features. Note that `top_p` and `threshold` are
mutually exclusive but either can be used in conjunction with `cutoff` to
select the top-ranked features and those that are smaller than the cutoff
value.}

\item{cutoff}{A numeric value, in -log10(p-value) units, where predictors
with _larger_ than the cutoff will be retained. A value of `NA` implies
that this criterion will be ignored.}

\item{lambda}{The correlation shrinkage intensity (range 0-1).}

\item{diagonal}{For diagonal = FALSE (the default) CAR scores are computed;
otherwise with diagonal = TRUE marginal correlations.}

\item{exclude}{A character vector of predictor names that will be removed
from the data. This will be set when `prep()` is used on the recipe and
should not be set by the user.}

\item{scores}{A tibble with 'variable' and 'scores' columns containing the
names of the variables and the absolute values of the calculated CAR
scores. This parameter is only produced after the recipe has been trained.}

\item{skip}{A logical. Should the step be skipped when the recipe is baked by
bake.recipe()? While all operations are baked when prep.recipe() is run,
some operations may not be able to be conducted on new data (e.g.
processing the outcome variable(s)). Care should be taken when using skip =
TRUE as it may affect the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A `step_select_carscore` object.}

\item{type}{A character with either 'terms' (the default) to return a
tibble containing the variables that have been removed by the filter step,
or 'scores' to return the scores for each variable.}
}
\value{
An updated version of `recipe` with the new step added to the
 sequence of existing steps (if any). For the `tidy` method, a tibble with a
 `terms` column for which predictors were removed.
}
\description{
`step_select_carscore` creates a *specification* of a recipe step that
selects a subset of predictors as part of a regression model based on the
scores of the CAR score algorithm. This step requires the `care` package to be
installed. The top `top_p` scoring features, or features whose scores occur
in the top percentile `threshold` will be retained as new predictors.
}
\details{
The recipe will stop if all of `top_p`, `threshold` and `cutoff` are left
unspecified.
}
\examples{
library(recipes)

data(car_prices, package = "modeldata")

rec <-
 recipe(Price ~ ., data = car_prices) \%>\%
 step_select_carscore(
   all_predictors(),
   outcome = "Price",
   top_p = 5,
   cutoff = 0.7
 )

prepped <- prep(rec)

new_data <- bake(prepped, new_data = NULL)
prepped
}
\concept{preprocessing}
\concept{supervised_filter}
\keyword{datagen}
